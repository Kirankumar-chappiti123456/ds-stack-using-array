linked list in single lined list:


#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node (*link);
};
int main()
{
    struct node (*head)=malloc(sizeof(struct node));
    head->data=45;
    head->link=NULL;
    printf("%d\n",head->data);
    printf("%p\n",head->link);
    }
    
    
    
    
    
linked list using basic methods:
    #include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node (*link);
};
int main()
{
    struct node (*head)=malloc(sizeof(struct node));
    head->data=45;
    head->link=NULL;
    
    
    struct node *current=malloc(sizeof(struct node));
    current->data=55;
    current->link=NULL;
    head->link=current;
    
   
    
    struct node *current1=malloc(sizeof(struct node));
    current1->data=58;
    current1->link=NULL;
    head->link=current1;
    
    printf("%d\n",head->data);
    printf("%p\n",head->link);
    
     printf("%d\n",current->data);
     printf("%p\n",current->link);
     printf("%p\n",head->link);

    
    printf("%d\n",current1->data);
    printf("%p\n",current1->link);
    printf("%p\n",head->link);
    return 0;
    
}








linked single list  using multiple node and linked all the node :
    #include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node (*link);
};
int main()
{
    struct node (*head)=malloc(sizeof(struct node));
    head->data=45;
    head->link=NULL;
    
    
    struct node *current=malloc(sizeof(struct node));
    current->data=55;
    current->link=NULL;
    head->link=current;
    
   
    
    current=malloc(sizeof(struct node));
    current->data=58;
    current->link=NULL;
    head->link->link=current;
    
    printf("%d\n",head->data);
    printf("%p\n",head->link);
    
     printf("%d\n",head ->link->data);
    printf("%p\n",head ->link->link);

    
    printf("%d\n",head->link->link ->data);
    printf("%p\n",head->link->link ->link);
    return 0;
    
}
    
