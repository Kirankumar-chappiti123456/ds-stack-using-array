insert at beg

#include<stdio.h>
#include<stdlib.h>
struct node 
{
    int data;
    struct node* next;
    
};
struct node *insertbeg(struct node *head)
{
    
    struct node* new=malloc(sizeof(struct node));
    new->data=90;
    new->next=head;
    head=new;
    struct node *temp=head;
    printf("insert at beg:");
    while(temp!=NULL)
    {
        printf("%d ",temp->data);
        temp=temp->next;
    }

}
int main()
{
    struct node *head=NULL;
    struct node *p=(struct node *)malloc(sizeof(struct node));
    p->data=10;
    p->next=NULL;
    head=p;
    
    struct node *p1=(struct node *)malloc(sizeof(struct node));
    p1->data=20;
    p->next=p1;
    
    struct node *p2=(struct node *)malloc(sizeof(struct node));
    p2->data=30;
    p1->next=p2;
    
    struct node *p3=(struct node *)malloc(sizeof(struct node));
    p3->data=40;
    p2->next=p3;
    p3->next=NULL;

insertbeg(head);
// struct node *p5=head;
// while(p5!=NULL)
// {
//     printf("%d  ",p5->data);
//     p5=p5->next;
// }
//     return 0;
}



insert at middle:


#include<stdio.h>
#include<stdlib.h>
struct node 
{
    int data;
    struct node* next;
    
};
struct node *insertmiddle(struct node *head)
{
    
    struct node* new=malloc(sizeof(struct node));
    struct node*temp=head;
    new->data=90;
    new->next=NULL;
    int pos=3;
    while(pos-1!=1)
    {
        temp=temp->next;
        pos--;
    }
    new->next=temp->next;
    temp->next=new;
    struct node *temp1=head;
    while(temp1!=NULL)
    {
        printf("%d",temp1->data);
        temp1=temp1->next;
    }
    
}
int main()
{
    struct node *head=NULL;
    struct node *p=(struct node *)malloc(sizeof(struct node));
    p->data=10;
    p->next=NULL;
    head=p;
    
    struct node *p1=(struct node *)malloc(sizeof(struct node));
    p1->data=20;
    p->next=p1;
    
    struct node *p2=(struct node *)malloc(sizeof(struct node));
    p2->data=30;
    p1->next=p2;
    
    struct node *p3=(struct node *)malloc(sizeof(struct node));
    p3->data=40;
    p2->next=p3;
    p3->next=NULL;

insertmiddle(head);
// struct node *p5=head;
// while(p5!=NULL)
// {
//     printf("%d  ",p5->data);
//     p5=p5->next;
// }
//     return 0;
}

insert at last:

#include<stdio.h>
#include<stdlib.h>
struct node 
{
    int data;
    struct node* next;
    
};
struct node *insertlast(struct node *head)
{
    
    struct node* new=malloc(sizeof(struct node));
    struct node *temp=head;
    new->data=90;
    new->next=NULL;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=new;
    
    struct node *temp1=head;
    
    while(temp1!=NULL)
    {
        printf("%d ",temp1->data);
        temp1=temp1->next;
    }
    
}
int main()
{
    struct node *head=NULL;
    struct node *p=(struct node *)malloc(sizeof(struct node));
    p->data=10;
    p->next=NULL;
    head=p;
    
    struct node *p1=(struct node *)malloc(sizeof(struct node));
    p1->data=20;
    p->next=p1;
    
    struct node *p2=(struct node *)malloc(sizeof(struct node));
    p2->data=30;
    p1->next=p2;
    
    struct node *p3=(struct node *)malloc(sizeof(struct node));
    p3->data=40;
    p2->next=p3;
    p3->next=NULL;

insertlast(head);
// struct node *p5=head;
// while(p5!=NULL)
// {
//     printf("%d  ",p5->data);
//     p5=p5->next;
// }
//     return 0;
}



delete at beg:

#include<stdio.h>
#include<stdlib.h>
struct node 
{
    int data;
    struct node* next;
    
};
struct node *deletebeg(struct node *head)
{
    struct node *temp=head;
    struct node *temp1;
    temp1=temp->next;
    head=temp1;
    free(temp);
    temp=NULL;
    
    struct node *temp2=head;
    while(temp2!=NULL)
    {
        printf("%d ",temp2->data);
        temp2=temp2->next;
    }
    
}
int main()
{
    struct node *head=NULL;
    struct node *p=(struct node *)malloc(sizeof(struct node));
    p->data=10;
    p->next=NULL;
    head=p;
    
    struct node *p1=(struct node *)malloc(sizeof(struct node));
    p1->data=20;
    p->next=p1;
    
    struct node *p2=(struct node *)malloc(sizeof(struct node));
    p2->data=30;
    p1->next=p2;
    
    struct node *p3=(struct node *)malloc(sizeof(struct node));
    p3->data=40;
    p2->next=p3;
    p3->next=NULL;

deletebeg(head);

}
